#!/bin/bash

# CDDL HEADER START
#
# This file and its contents are supplied under the terms of the
# Common Development and Distribution License ("CDDL"), version 1.0.
# You may only use this file in accordance with the terms of version
# 1.0 of the CDDL.
#
# A full copy of the text of the CDDL should have accompanied this
# source.  A copy of the CDDL is also available via the Internet at
# http://www.illumos.org/license/CDDL.
#
# CDDL HEADER END

# Copyright 2020 Saso Kiselkov. All rights reserved.

FILE="openal-soft-1.20.1.tar.bz2"
DIR="${FILE/%.tar.bz2/}"

[ -d "$DIR" ] && rm -rf "$DIR"

set -e

CONFOPTS_COMMON="-DALSOFT_EMBED_HRTF_DATA=ON -DLIBTYPE=STATIC \
    -DALSOFT_UTILS=OFF -DALSOFT_EXAMPLES=OFF"

function do_build() {
	ARCH="$1"
	EXTRA_FLAGS="$2"
	case $(uname) in
	Linux)
		NCPUS=$(( $(grep 'processor[[:space:]]\+:' /proc/cpuinfo \
		    | wc -l) + 1 ))
		;;
	Darwin)
		NCPUS=$(( $(sysctl -n hw.ncpu) + 1 ))
	esac

	(
		cd "$DIR-$ARCH"
		cd "build"
		cmake -DCMAKE_INSTALL_PREFIX="$(pwd)/install" \
		    $EXTRA_FLAGS ..
		make -j "$NCPUS" && make install
	)
}

case $(uname) in
	Linux)
		PRODUCT="$DIR-win-64/build/install/lib/libOpenAL32.a"
		if [[ "$do_clean" = "1" ]] || [[ "$minimal" =  "1" ]]; then
			rm -rf "$DIR-win-64"
		elif ! [ -f "$PRODUCT" ]; then
			rm -fr "$DIR-win-64"
			tar xjvf "$FILE" && mv "$DIR" "$DIR-win-64"
			( cd "$DIR-win-64" && ln -s ../../mingw-std-threads \
			    mingw_stdthreads )
			( cd "$DIR-win-64" && \
			    patch -p1 < ../mingw_stdthreads.patch )
			sed -i '/CMAKE_INSTALL_PREFIX/ d;' \
			    "$DIR-win-64/XCompile.txt"
			sed -i ' /dllexport/ d;' \
			    "$DIR-win-64/CMakeLists.txt"
			do_build "win-64" "-DHOST=x86_64-w64-mingw32 \
			    -DCMAKE_TOOLCHAIN_FILE=../XCompile.txt \
			    -DCMAKE_C_FLAGS=-fvisibility=hidden \
			    -DALSOFT_INSTALL=OFF $CONFOPTS_COMMON"
			cp -r "$DIR-win-64/include" "$DIR-win-64/build/install"
			mkdir -p "$DIR-win-64/build/install/lib/pkgconfig"
			cp -r "$DIR-win-64/build/libOpenAL32.a" \
			    "$DIR-win-64/build/install/lib"
			cp -r "$DIR-win-64/build/openal.pc" \
			    "$DIR-win-64/build/install/lib/pkgconfig"
		fi

		PRODUCT="$DIR-linux-64/build/install/lib/libopenal.a"
		if [[ "$do_clean" = "1" ]]; then
			rm -rf "$DIR-linux-64"
		elif ! [ -f "$PRODUCT" ]; then
			rm -fr "$DIR-linux-64" && \
			tar xjvf "$FILE" && mv "$DIR" "$DIR-linux-64" && \
			do_build "linux-64" \
			    "-DCMAKE_POSITION_INDEPENDENT_CODE=ON \
			    $CONFOPTS_COMMON"
		fi
		;;
	Darwin)
		PRODUCT="$DIR-mac-64/build/install/lib/libopenal.a"
		if [[ "$do_clean" = "1" ]]; then
			rm -rf "$DIR-mac-64"
		elif ! [ -f "$PRODUCT" ]; then
			rm -fr "$DIR-mac-64" && \
			tar xjvf "$FILE" && mv "$DIR" "$DIR-mac-64" && \
			do_build "mac-64" \
			    "-DCMAKE_C_FLAGS=-mmacosx-version-min=10.9 \
			    -DCMAKE_LDFLAGS=-mmacosx-version-min=10.9 \
			    $CONFOPTS_COMMON"
		fi
		;;
	*)
		echo "Unsupported build platform" >&2
		exit 1
		;;
esac
